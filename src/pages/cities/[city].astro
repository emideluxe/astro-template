---
import BaseLayout from '../../layouts/BaseLayout.astro';
import WalkCard from '../../components/WalkCard.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
	const cities = await getCollection('cities');
	const walks = await getCollection('walks');
	
	return cities.map((city) => {
		const cityWalks = walks.filter((walk) => walk.data.city === city.id);
		return {
			params: { city: city.id },
			props: { city, walks: cityWalks },
		};
	});
}

const { city, walks } = Astro.props;
---

<BaseLayout
	title={`${city.data.name} Walking Routes`}
	description={city.data.description}
>
	<main>
		<section class="hero">
			{city.data.image && (
				<img src={city.data.image} alt={city.data.name} class="hero-image" />
			)}
			<div class="hero-content">
				<h1>{city.data.name}</h1>
				<p class="country">{city.data.country}</p>
				<p class="description">{city.data.description}</p>
			</div>
		</section>

		<!-- ==========================================
		     MAP SECTION - CUSTOMIZE COORDINATES
		     ========================================== -->
		<section class="map-section">
			<div class="map-container">
				<h2>Explore {city.data.name} on the Map</h2>
				<div class="map-placeholder">
					<!-- 
					TO CUSTOMIZE THE MAP FOR EACH CITY:
					1. Go to https://www.openstreetmap.org/
					2. Navigate to your city
					3. Click "Share" button
					4. Click "HTML" tab
					5. Copy the iframe src URL and replace the one below
					
					CURRENT MAP: Shows London (default)
					To make dynamic per city, you could:
					- Add coordinates to city content files
					- Create a mapping of city IDs to coordinates
					- Use a geocoding service to get coordinates from city names
					-->
					<iframe
						src={`https://www.openstreetmap.org/export/embed.html?bbox=-0.5,51.3,0.3,51.7&layer=mapnik&marker=51.5,-0.1`}
						style="border: none; width: 100%; height: 400px;"
						allowfullscreen=""
						loading="lazy"
						title={`Map of ${city.data.name}`}>
					</iframe>
					<p class="map-attribution">
						<small>
							<a href="https://www.openstreetmap.org/" target="_blank">Â© OpenStreetMap</a> contributors
						</small>
					</p>
				</div>
			</div>
		</section>

		<section class="walks-section">
			<h2>Available Walks</h2>
			<div class="walks-grid">
				{walks.map((walk) => (
					<WalkCard
						title={walk.data.title}
						description={walk.data.description}
						city={walk.data.city}
						duration={walk.data.duration}
						distance={walk.data.distance}
						difficulty={walk.data.difficulty}
						coverImage={walk.data.coverImage}
						href={`/walks/${walk.id}`}
					/>
				))}
			</div>
		</section>
	</main>
</BaseLayout>

<style>
	main {
		width: 100%;
		max-width: 1200px;
		margin: 0 auto;
	}

	.hero {
		position: relative;
		height: 400px;
		overflow: hidden;
		margin-bottom: 3rem;
	}

	.hero-image {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.hero-content {
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		padding: 3rem 2rem;
		background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
		color: white;
	}

	.hero-content h1 {
		margin: 0 0 0.5rem 0;
		font-size: 3rem;
	}

	.country {
		margin: 0 0 1rem 0;
		font-size: 1.125rem;
		opacity: 0.9;
		text-transform: uppercase;
		letter-spacing: 1px;
	}

	.description {
		margin: 0;
		font-size: 1.125rem;
		line-height: 1.6;
		max-width: 600px;
	}

	.map-section {
		padding: 3rem 2rem;
		background: #f8f9fa;
	}

	.map-container {
		max-width: 1000px;
		margin: 0 auto;
	}

	.map-container h2 {
		text-align: center;
		margin-bottom: 2rem;
		color: #333;
	}

	.map-placeholder {
		background: white;
		border-radius: 8px;
		overflow: hidden;
		box-shadow: 0 2px 8px rgba(0,0,0,0.1);
	}

	.map-attribution {
		text-align: center;
		margin: 0;
		padding: 0.5rem;
		background: #f0f0f0;
	}

	.map-attribution a {
		color: #4078c0;
		text-decoration: none;
	}

	.walks-section {
		padding: 0 2rem 3rem;
	}

	.walks-section h2 {
		margin-bottom: 2rem;
		font-size: 2rem;
	}

	.walks-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
		gap: 2rem;
	}

	@media (max-width: 768px) {
		.hero {
			height: 300px;
		}

		.hero-content h1 {
			font-size: 2rem;
		}

		.walks-grid {
			grid-template-columns: 1fr;
		}
	}
</style>