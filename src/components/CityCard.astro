---
export interface Props {
	name: string;
	country: string;
	description: string;
	totalWalks?: number;
	image?: string;
	href: string;
}

const { name, country, description, totalWalks, image, href } = Astro.props;
---

<article class="city-card">
	<a href={href}>
		{image && (
			<div class="image-container">
				<img src={image} alt={name} loading="lazy" />
				<div class="overlay"></div>
			</div>
		)}
		<div class="content">
			<h2>{name}</h2>
			<p class="country">{country}</p>
			<p class="description">{description}</p>
			{totalWalks && (
				<p class="walks-count">{totalWalks} walk{totalWalks !== 1 ? 's' : ''} available</p>
			)}
		</div>
	</a>
</article>

<style>
	.city-card {
		position: relative;
		border-radius: 12px;
		overflow: hidden;
		transition: transform 0.3s ease;
		background: white;
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
		height: 100%;
	}
	
	.city-card:hover {
		transform: translateY(-4px);
		box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
	}
	
	.city-card a {
		text-decoration: none;
		color: inherit;
		display: block;
		height: 100%;
	}
	
	.image-container {
		position: relative;
		height: 240px;
		overflow: hidden;
	}
	
	.image-container img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform 0.3s ease;
	}
	
	.city-card:hover .image-container img {
		transform: scale(1.05);
	}
	
	.overlay {
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		height: 60%;
		background: linear-gradient(to top, rgba(0,0,0,0.4), transparent);
		pointer-events: none;
	}
	
	.content {
		padding: 1.5rem;
	}
	
	.content h2 {
		margin: 0 0 0.25rem 0;
		font-size: 1.75rem;
		color: #333;
	}
	
	.country {
		color: #666;
		font-size: 0.875rem;
		margin-bottom: 1rem;
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}
	
	.description {
		color: #555;
		line-height: 1.6;
		margin-bottom: 1rem;
	}
	
	.walks-count {
		color: #4078c0;
		font-weight: 500;
		font-size: 0.875rem;
	}
</style>